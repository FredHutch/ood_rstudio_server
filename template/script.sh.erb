#!/usr/bin/env bash

set -e
set -x


module purge

# load RStudio Server
# This will cause an error on the chorus partition, 
# apptainer is an OS module there.
# TODO handle that
module load Apptainer


  

# TODO - add to library path if user has chosen a seurat module

# load R
# module load <^= context.Rapp %>

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"
  exec &>>"\${RSESSION_LOG_FILE}"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Generate a database.conf file
export DBCONF="${PWD}/database.conf"
(
umask 077
sed 's/^ \{2\}//' > "${DBCONF}" << EOL
  # set database location
  provider=sqlite
  directory=/tmp/${USER}/${SLURM_JOB_ID}/rstudio-server/db
EOL
)
chmod 700 "${DBCONF}"

# Set working directory to home directory
cd "${HOME}"

# Create a unique $TMPDIR for runtime files
#export TMPDIR="$(mktemp -d)"

# Output debug info
module list

# Launch the RStudio Server
echo "Starting up rserver..."
set -x
# rserver \
#   --www-port ${port} \
#   --auth-none 0 \
#   --auth-pam-helper-path "${RSTUDIO_AUTH}" \
#   --auth-encrypt-password 0 \
#   --rsession-path "${RSESSION_WRAPPER_FILE}" \
#   --server-data-dir "${TMPDIR}" \
#   --secure-cookie-key-file "${TMPDIR}/rstudio-server/secure-cookie-key" \
#   --database-config-file "${DBCONF}" \
#   --server-user $(whoami)


export MYTEMP=/loc/scratch/${SLURM_JOB_ID}/$(date +%s)


# we can't use $(pwd) because rstudio complains that the directory path
# is too long

mkdir -p $MYTEMP
mkdir -p $MYTEMP/rstudio-server


apptainer exec \
  --scratch /run,/var/lib/rstudio-server \
  --bind /fh/fast:/fh/fast \
  --bind /hpc/temp:/hpc/temp \
  --bind /fh/working:/fh/working \
  --bind /fh/secure:/fh/secure \
  --workdir $(mktemp -d) \
  <%= context.rserver %> \
  rserver \
  --www-port ${port} \
  --www-address=0.0.0.0 \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --rsession-path "${RSESSION_WRAPPER_FILE}" \
  --server-data-dir "${MYTEMP}" \
  --secure-cookie-key-file "${MYTEMP}/rstudio-server/secure-cookie-key" \
  --database-config-file "${DBCONF}" \
  --server-user $(whoami)

echo will we ever see this
